Namespace(batch_size=100, continue_from_epoch=-1, seed=0, image_num_channels=3, image_height=32, image_width=32, num_stages=3, num_blocks_per_stage=0, num_filters=32, num_epochs=100, num_classes=100, experiment_name='VGG_08_experiment', use_gpu=True, weight_decay_coefficient=0, block_type='conv_block')
Downloading https://www.cs.toronto.edu/~kriz/cifar-100-python.tar.gz to data/cifar-100-python.tar.gz
train (47500, 32, 32, 3)
train (47500,)
Files already downloaded and verified
val (2500, 32, 32, 3)
val (2500,)
Files already downloaded and verified
test (10000, 32, 32, 3)
test (10000,)
Building basic block of ConvolutionalNetwork using input shape (100, 3, 32, 32)
torch.Size([100, 32, 32, 32])
torch.Size([100, 32, 16, 16])
torch.Size([100, 32, 8, 8])
torch.Size([100, 32, 4, 4])
shape before final linear layer torch.Size([100, 32, 1, 1])
Block is built, output volume is torch.Size([100, 100])
Use GPU 0
here
System learnable parameters
model.layer_dict.input_conv.layer_dict.conv_0.weight torch.Size([32, 3, 3, 3])
model.layer_dict.input_conv.layer_dict.bn_0.weight torch.Size([32])
model.layer_dict.input_conv.layer_dict.bn_0.bias torch.Size([32])
model.layer_dict.reduction_block_0.layer_dict.conv_0.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_0.layer_dict.conv_0.bias torch.Size([32])
model.layer_dict.reduction_block_0.layer_dict.conv_1.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_0.layer_dict.conv_1.bias torch.Size([32])
model.layer_dict.reduction_block_1.layer_dict.conv_0.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_1.layer_dict.conv_0.bias torch.Size([32])
model.layer_dict.reduction_block_1.layer_dict.conv_1.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_1.layer_dict.conv_1.bias torch.Size([32])
model.layer_dict.reduction_block_2.layer_dict.conv_0.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_2.layer_dict.conv_0.bias torch.Size([32])
model.layer_dict.reduction_block_2.layer_dict.conv_1.weight torch.Size([32, 32, 3, 3])
model.layer_dict.reduction_block_2.layer_dict.conv_1.bias torch.Size([32])
model.logit_linear_layer.weight torch.Size([100, 32])
model.logit_linear_layer.bias torch.Size([100])
Total number of parameters 59716
Total number of conv layers 8
Total number of linear layers 1
Epoch 0: train_acc_0.0371_train_loss_4.3270_val_acc_0.0640_val_loss_4.0432 epoch time 27.7230 seconds
Generating Gradient Flow Plot at epoch 0
Epoch 1: train_acc_0.0861_train_loss_3.9346_val_acc_0.1152_val_loss_3.7384 epoch time 29.3228 seconds
Generating Gradient Flow Plot at epoch 1
